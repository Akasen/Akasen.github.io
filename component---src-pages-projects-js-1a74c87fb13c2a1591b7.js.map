{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/pages/components/Main.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/components/Navbar.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/pages/images/profile.jpg","webpack:///./src/pages/components/Layout.js"],"names":["Projects","class","href","target","Main","children","loader","enqueue","React","createContext","Navbar","className","to","src","profile","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Layout"],"mappings":"mGAAA,4CAgHeA,UA7GE,kBACf,6BACE,kBAAC,UAAD,KACE,yBAAKC,MAAM,YACT,4BACE,uBACEC,KAAK,mDACLC,OAAO,uBAFT,qCAOF,qHAIA,kQAMA,8gBAUA,uFACA,2RAMA,iUAOA,gYAQA,maASF,yBAAKF,MAAM,YACT,4BACE,uBACEC,KAAK,iDACLC,OAAO,uBAFT,iBAOF,qNAKA,oPAMA,wLAOF,yBAAKF,MAAM,YACT,4EACA,iQAMA,oLAKA,uE,kCC1GR,gCAMeG,UAJF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OAAO,yBAAKJ,MAAM,QAAQI,K,2GCWHC,QAAOC,QAELC,IAAMC,cAAc,I,mCCShCC,UApBA,WACb,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKX,MAAM,aAAaY,IAAKC,OAE/B,wBAAIb,MAAM,YACR,4BACE,kBAAC,IAAD,CAAMW,GAAG,aAAT,aAEF,4BACE,uBAAGV,KAAK,4BAA4BC,OAAO,uBAA3C,e,qBChBV,IAAsBY,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEd,IAAMe,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,qBCPXT,EAAOC,QAAU,IAA0B,uD,kCCA3C,kEAceS,UATA,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAChB,OACE,yBAAKJ,MAAM,aACT,kBAAC,UAAD,MACA,kBAAC,UAAD,KAAOI","file":"component---src-pages-projects-js-1a74c87fb13c2a1591b7.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"./components/Layout\"\r\n\r\nconst Projects = () => (\r\n  <div>\r\n    <Layout>\r\n      <div class=\"showcase\">\r\n        <h1>\r\n          <a\r\n            href=\"https://github.com/Blue-Harvest-Solutions/CPATv2\"\r\n            target=\"noopener noreferrer\"\r\n          >\r\n            Course Planner and Advising Tool\r\n          </a>\r\n        </h1>\r\n        <p>\r\n          This was my two semester long Senior Project I did at the University\r\n          of North Florida.\r\n        </p>\r\n        <p>\r\n          Senior Project takes the form of a project that has multiple students\r\n          working on some non-mission critcal aspect of a local company or\r\n          organizations project. In my groups case, we found ourselves working\r\n          with the school itself.\r\n        </p>\r\n        <p>\r\n          The idea brought to us was simple: create a tool that would allow\r\n          students to have a better understanding where they were academically\r\n          with regards to their courses in an attempt to help improve graduation\r\n          rates. A fantastic example is with regards to dropping a course, as\r\n          certain courses are only offered during certain semesters, so a\r\n          student should be made more aware of this fact before dropping a\r\n          course so they don't drop something they will now have to wait\r\n          essentially a year to retake.\r\n        </p>\r\n        <p>This project was developed using Microsoft ASP.NET Core.</p>\r\n        <p>\r\n          I will with great candor admit that in all honesty, everyone in my\r\n          team was significantly underprepared for this project. In any moment I\r\n          think about or speak about this project, I constantly wonder \"what if\"\r\n          with relation to myself and my own studies.\r\n        </p>\r\n        <p>\r\n          At no point ever did I ever find myself taking a course that went into\r\n          great detail about ASP.NET development, or any modern web development\r\n          concepts. Would I have been, at the very least as an individual,\r\n          better prepared had I the knowledge I do now about basic Javascript\r\n          web development?\r\n        </p>\r\n        <p>\r\n          Also with candor, probably not. ASP.NET and the Visual Studio IDE are\r\n          a different beast from what I can tell. Certainly, there'd be some\r\n          overlap, but I would make the uneducated argument that between even\r\n          Ruby, Python, and Javascript backend development, you at least have a\r\n          lot more basic common ground to work with, like with that of package\r\n          managers.\r\n        </p>\r\n        <p>\r\n          I'd have been better off spending two academic years being constantly\r\n          immersed in ASP.NET and C# development all things considered, at least\r\n          with relation to my Senior Project. Of course, I also think that's a\r\n          horrible idea in itself. I also wouldn't agree with the choice of\r\n          basically putting students through fullstack Javascript as their path,\r\n          but I'd wager it's a better alternative.\r\n        </p>\r\n      </div>\r\n      <div class=\"showcase\">\r\n        <h1>\r\n          <a\r\n            href=\"https://github.com/Akasen/2020-Gatsby-Homepage\"\r\n            target=\"noopener noreferrer\"\r\n          >\r\n            This Website\r\n          </a>\r\n        </h1>\r\n        <p>\r\n          This homepage has been quite the learning experience so far. I've\r\n          remade it many times over the years, but this current iteration I'm\r\n          taking more active steps in learning some tools.\r\n        </p>\r\n        <p>\r\n          This iteration was originally just made in basic HTML and CSS, but\r\n          then I realized it was a perfect opportunity to take what I had there\r\n          and use them as a way to guide me in the creation of a basic Gatsby\r\n          website.\r\n        </p>\r\n        <p>\r\n          I'm so far happy with the results so far, and have in a short time\r\n          learned a great deal about Gatsby and gained a better basic\r\n          understanding of ReactJS.\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"showcase\">\r\n        <h1>\"The NodeJS/ExpressJS That Serves This Site\"</h1>\r\n        <p>\r\n          It's not really a major feat, probably. But if I had to at least be\r\n          honest, it is an accomplishment on my end to decide \"I'm gonna delete\r\n          apache just to see if I can build a basic node backend that serves my\r\n          static website\".\r\n        </p>\r\n        <p>\r\n          I'd wager most university students that would have gone through the\r\n          university track alone wouldn't have ever thought to do this in their\r\n          spare time.\r\n        </p>\r\n        <p>But I did it because I was curious.</p>\r\n      </div>\r\n    </Layout>\r\n  </div>\r\n)\r\n\r\nexport default Projects\r\n","import React from \"react\"\r\n\r\nconst Main = ({ children }) => {\r\n  return <div class=\"main\">{children}</div>\r\n}\r\n\r\nexport default Main\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport profile from \"../images/profile.jpg\"\r\nimport \"./navbar.css\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/\">\r\n        <img class=\"profilepic\" src={profile} />\r\n      </Link>\r\n      <ul class=\"navlinks\">\r\n        <li>\r\n          <Link to=\"/projects\">Projects</Link>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://github.com/akasen\" target=\"noopener noreferrer\">\r\n            Github\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/profile-858804dbd3eccfa0532936b18ac4d11b.jpg\";","import React from \"react\"\r\nimport Navbar from \"./Navbar\"\r\nimport Main from \"./Main\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div class=\"container\">\r\n      <Navbar></Navbar>\r\n      <Main>{children}</Main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}